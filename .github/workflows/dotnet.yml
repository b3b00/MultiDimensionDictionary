name: build & deploy

on:
  push:
    branches: 
      - dev
      - tech/actions 
      - master
  pull_request:
    branches: 
      - dev
      - master
permissions:
  pull-requests: write
  packages: write
  contents: write
jobs:  
  build:
    env:
      TESTS_PROJECT: 'MultiDimensionTests/MultiDimensionTests.csproj' # path to test project or solution
      PUBLISH_NUGET: true # if true a nuget will be published on version change
      RUN_TESTS: true # if true tests are run and coverage data is published to coveralls and a coverage report is produced.
      MAIN_CSPROJ: 'MultiDimensionDictionary/MultiDimensionDictionary.csproj' # main project (for nuget packaging)
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
          os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Clean artifacts and nugets 
      run: dotnet clean  --configuration Release && dotnet nuget locals all --clear
    - name: Build with dotnet 
      run: dotnet build --configuration Release     
    - name: Test with dotnet
      uses: b3b00/coverlet-action@1.2.2
      id: 'coverlet'
      if: env.RUN_TESTS
      with:
        testProject: ${{env.TESTS_PROJECT}}
        output: 'lcov.info'
        threshold: 50
        outputFormat: 'lcov'
        excludes: '[ConsoleTests]*'
    - name: coveralls      
      uses: coverallsapp/github-action@v1.1.1
      if: matrix.os == 'windows-latest' && env.RUN_TESTS
      with:
        github-token: ${{secrets.GITHUB_TOKEN }} 
        path-to-lcov: ${{steps.coverlet.outputs.coverageFile}} 
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.12
      with:
        reports: ${{steps.coverlet.outputs.coverageFile}} 
        targetdir: 'coveragereport' 
        reporttypes: 'HtmlInline;MarkdownSummary' 
        verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
        tag: '${{ github.run_number }}_${{ github.run_id }}' 
#    - name: Publish coverage summary
#      uses: marocchino/sticky-pull-request-comment@v2
#      with:
#           path: coveragereport/Summary.md
    - name: publish nuget
      if:  ${{success() && matrix.os == 'windows-latest' && env.PUBLISH_NUGET}}
      id: publish_nuget
      uses: alirezanet/publish-nuget@v3.0.0      
      with:
          VERSION_REGEX: <version>(.*)<\/version>  
          PROJECT_FILE_PATH: ${{env.MAIN_CSPROJ}}
          NUGET_KEY: ${{secrets.NUGET_KEY}}
          VERSION_FILE_PATH: ${{env.MAIN_CSPROJ}}
          INCLUDE_SYMBOLS: true
    - name: Create Release
      if: ${{ success() && matrix.os == 'windows-latest' && steps.publish_nuget.outputs.VERSION != ''  && steps.publish_nuget.outputs.VERSION != null && github.event_name != 'pull_request'}}
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.publish_nuget.outputs.VERSION }}
        release_name: Release ${{ steps.publish_nuget.outputs.VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      if: ${{ success() && matrix.os == 'windows-latest' && steps.create_release.outputs.upload_url != ''  && steps.create_release.outputs.upload_url != null }}
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.publish_nuget.outputs.PACKAGE_PATH }}
        asset_name: ${{ steps.publish_nuget.outputs.PACKAGE_NAME }}
        asset_content_type: application/zip
    - name: refresh coverage badge
      uses: fjogeleit/http-request-action@master
      with:
        url: https://camo.githubusercontent.com/6457ecfe4f22a8f097839c514d2da979d245554c8d0e3bbdf1376b6fd2da888e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f62336230302f4d756c746944696d656e73696f6e44696374696f6e6172792f62616467652e7376673f6272616e63683d6d6173746572
        method: PURGE
    - name: refresh nuget badge
      uses: fjogeleit/http-request-action@master
      with:
        url: https://camo.githubusercontent.com/b2f21c7a8646a26fa0d8dbdb8715e270bfc59c2a2b76083f929ba1202a14803c/68747470733a2f2f696d672e736869656c64732e696f2f6e756765742f762f4d756c746944696d656e73696f6e44696374696f6e6172792e737667
        method: PURGE
